import { ObjectHelper } from 'cnsys-core';
import { EAUBaseDataService } from 'eau-core';
import { DataServiceLimit, DataServiceLimitsSearchCriteria } from '../models/ModelsAutoGenerated';

export class ServiceLimitsDataService extends EAUBaseDataService {

    protected baseUrl(): string {
        return super.baseUrl();
    }

    /**
     * Взима списък с лимити
     * @param searchCriteria 
     */
    public getServiceLimits(searchCriteria: DataServiceLimitsSearchCriteria) : Promise<DataServiceLimit[]>{
        let result = this.get<DataServiceLimit[]>("DataServiceLimits", DataServiceLimit, searchCriteria);

        return this.doSearch(searchCriteria, () => result, (data, criteria) => {
            return data.filter(
                d => !criteria 
                || (!criteria.serviceCode ||  d.serviceCode.toLocaleLowerCase().indexOf(criteria.serviceCode.toLocaleLowerCase().trim()) >= 0) 
                && (!criteria.serviceName ||  d.serviceName.toLocaleLowerCase().indexOf(criteria.serviceName.toLocaleLowerCase().trim()) >= 0)
                && (ObjectHelper.isNullOrUndefined(criteria.status) || criteria.status == d.status)
            );
        })
     }

     public updateServiceLimit(serviceLimit:DataServiceLimit) {
        return this.put<DataServiceLimit>(`DataServiceLimits/${serviceLimit.serviceCode}`, serviceLimit, serviceLimit);
    }

    /**
     * Активира услуга
     * @param serviceLimit
     */
    public activateServiceLimit(serviceLimit: DataServiceLimit): Promise<boolean> {
        return this.put<boolean>("DataServiceLimits/" + serviceLimit.serviceCode + "/Status", serviceLimit,  1);
    }

    /**
     * Деактивира услуга
     * @param serviceLimit
     */
    public deactivateServiceLimit(serviceLimit: DataServiceLimit): Promise<void> {
        return this.put<void>("DataServiceLimits/" + serviceLimit.serviceCode + "/Status", serviceLimit, 0);
    }
} 