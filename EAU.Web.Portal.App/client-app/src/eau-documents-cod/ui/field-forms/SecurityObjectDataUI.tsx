import { BaseProps, ViewMode } from "cnsys-ui-react";
import { attributesClassFormControlRequiredLabel, EAUBaseComponent, ResourceHelpers, ValidationSummary, ValidationSummaryStrategy } from "eau-core";
import { ApplicationFormManagerProps, FieldFormUI, withCollectionItems, withDocumentFormManager } from "eau-documents";
import { action, observable } from "mobx";
import { observer } from "mobx-react";
import React from "react";
import { ArrayHelper, SelectListItem } from "cnsys-core";
import { isNotificationForTakingOrRemovingFromSecurityManager } from "../../form-managers/NotificationForTakingOrRemovingFromSecurityManager";
import { PointOfPrivateSecurityServicesLaw, SecurityObject, ProtectionOfAgriculturalProperty, SecurityTransport, AlarmAndSecurityActivity, SecurityOfEvents, ProtectionPersonsProperty, SecurityOfSitesRealEstate, SecurityTransportingCargo, PersonalSecurity } from "../../models/ModelsAutoGenerated";
import { SecurityObjectType4, SecurityObjectType9, SecurityObjectType3, SecurityObjectType2, SecurityObjectType5, SecurityObjectType7, SecurityObjectType8, SecurityObjectType1 } from "./security-objects";

interface SecurityObjectDataProps extends BaseProps, ApplicationFormManagerProps {
}

@observer export class SecurityObjectDataImpl extends EAUBaseComponent<SecurityObjectDataProps, SecurityObject> {

    private pointOfPrivateSecurityServicesLawItems: SelectListItem[];
    private isForTermination: boolean;

    constructor(props: SecurityObjectDataProps) {
        super(props);

        this.handlePointOfPrivateSecurityServicesLawChange = this.handlePointOfPrivateSecurityServicesLawChange.bind(this);

        let points = [];

        if (isNotificationForTakingOrRemovingFromSecurityManager(this.props.documentFormManager)) {
            points = this.props.documentFormManager.getPointOfPrivateSecurityServicesLaw();

            if (!this.model.selfProtectionPersonsProperty)
                this.props.documentFormManager.initSecurityObject(this.model);

            this.isForTermination = this.props.documentFormManager.isTerminationNotification();
        }

        if (points && points.length > 0) {
            this.pointOfPrivateSecurityServicesLawItems = ArrayHelper.queryable.from(points).select(el => {
                let tmpItem = new SelectListItem({
                    text: ResourceHelpers.getResourceByEmun(el as number, PointOfPrivateSecurityServicesLaw),
                    value: el.toString()
                });

                if (points.length == 1) {
                    tmpItem.selected = true;
                }

                return tmpItem;
            }).toArray();
        } else {
            this.pointOfPrivateSecurityServicesLawItems = [];
        }

    }

    renderEdit(): JSX.Element {
        return (
            <>
                
                <ValidationSummary model={this.model} {...this.props} strategy={ValidationSummaryStrategy.includeOnlyModelErrors} />
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(m => m.pointOfPrivateSecurityServicesLaw, null, attributesClassFormControlRequiredLabel)}
                        {this.pointOfPrivateSecurityServicesLawItems.length > 1 ?
                            this.dropDownListFor(m => m.pointOfPrivateSecurityServicesLaw, this.pointOfPrivateSecurityServicesLawItems, null, this.handlePointOfPrivateSecurityServicesLawChange, true, this.getResource('GL_DDL_CHOICE_L'))
                            : this.dropDownListFor(m => m.pointOfPrivateSecurityServicesLaw, this.pointOfPrivateSecurityServicesLawItems)}
                    </div>
                </div>
                
                {this.model.selfProtectionPersonsProperty && <SecurityObjectType4 {...this.bind(x => x.selfProtectionPersonsProperty)} isForTermination={this.isForTermination} />}
                {this.model.protectionOfAgriculturalProperty && <SecurityObjectType9 {...this.bind(x => x.protectionOfAgriculturalProperty)} isForTermination={this.isForTermination} />}
                {this.model.alarmAndSecurityActivity && <SecurityObjectType3 {...this.bind(x => x.alarmAndSecurityActivity)} isForTermination={this.isForTermination} />}
                {this.model.protectionPersonsProperty && <SecurityObjectType2 {...this.bind(x => x.protectionPersonsProperty)} isForTermination={this.isForTermination} />}
                {this.model.securityOfSitesRealEstate && <SecurityObjectType5 {...this.bind(x => x.securityOfSitesRealEstate)} isForTermination={this.isForTermination} />}
                {this.model.securityOfEvents && <SecurityObjectType7 {...this.bind(x => x.securityOfEvents)} isForTermination={this.isForTermination} />}
                {this.model.securityTransportingCargo && <SecurityObjectType8 {...this.bind(x => x.securityTransportingCargo)} isForTermination={this.isForTermination} />}
                {this.model.personalSecurity && <SecurityObjectType1 {...this.bind(x => x.personalSecurity)} isForTermination={this.isForTermination} />}
            </>
        );
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <div className="row">
                    <div className="form-group col-12">
                        <ValidationSummary model={this.model} {...this.props} strategy={ValidationSummaryStrategy.includeOnlyModelErrors} viewMode={ViewMode.Display} />
                    </div>
                </div>  
                <div className="row">
                    <div className="form-group col-12">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.pointOfPrivateSecurityServicesLaw)}</h4>
                        {ResourceHelpers.getResourceByEmun(this.model.pointOfPrivateSecurityServicesLaw as number, PointOfPrivateSecurityServicesLaw)}
                        {this.propertyErrorsDispleyFor(m => m.pointOfPrivateSecurityServicesLaw)}
                    </div>
                </div>
                {this.model.selfProtectionPersonsProperty && <SecurityObjectType4 {...this.bind(x => x.selfProtectionPersonsProperty)} isForTermination={this.isForTermination} />}
                {this.model.protectionOfAgriculturalProperty && <SecurityObjectType9 {...this.bind(x => x.protectionOfAgriculturalProperty)} isForTermination={this.isForTermination} />}
                {this.model.alarmAndSecurityActivity && <SecurityObjectType3 {...this.bind(x => x.alarmAndSecurityActivity)} isForTermination={this.isForTermination} />}
                {this.model.protectionPersonsProperty && <SecurityObjectType2 {...this.bind(x => x.protectionPersonsProperty)} isForTermination={this.isForTermination} />}
                {this.model.securityOfSitesRealEstate && <SecurityObjectType5 {...this.bind(x => x.securityOfSitesRealEstate)} isForTermination={this.isForTermination} />}
                {this.model.securityOfEvents && <SecurityObjectType7 {...this.bind(x => x.securityOfEvents)} isForTermination={this.isForTermination} />}
                {this.model.securityTransportingCargo && <SecurityObjectType8 {...this.bind(x => x.securityTransportingCargo)} isForTermination={this.isForTermination} />}
                {this.model.personalSecurity && <SecurityObjectType1 {...this.bind(x => x.personalSecurity)} isForTermination={this.isForTermination} />}
            </>
        );
    }



    @action private handlePointOfPrivateSecurityServicesLawChange() {
        this.model.personalSecurity = null;
        this.model.protectionPersonsProperty = null;
        this.model.alarmAndSecurityActivity = null;
        this.model.selfProtectionPersonsProperty = null;
        this.model.securityOfSitesRealEstate = null;
        this.model.securityOfEvents = null;
        this.model.securityTransportingCargo = null;
        this.model.protectionOfAgriculturalProperty = null;

        if (this.model.pointOfPrivateSecurityServicesLaw == PointOfPrivateSecurityServicesLaw.AgriculturalAndPropertyProtection) {
            this.model.protectionOfAgriculturalProperty = new ProtectionOfAgriculturalProperty();
            this.model.protectionOfAgriculturalProperty.securityTransports = []
            this.model.protectionOfAgriculturalProperty.securityTransports.push(new SecurityTransport());
        }
        else if (this.model.pointOfPrivateSecurityServicesLaw == PointOfPrivateSecurityServicesLaw.AlarmAndSecurityActivity) {
            this.model.alarmAndSecurityActivity = new AlarmAndSecurityActivity();
            this.model.alarmAndSecurityActivity.securityTransports = []
            this.model.alarmAndSecurityActivity.securityTransports.push(new SecurityTransport());
        }
        else if (this.model.pointOfPrivateSecurityServicesLaw == PointOfPrivateSecurityServicesLaw.PropertySecurityServices) {
            this.model.protectionPersonsProperty = new ProtectionPersonsProperty();
            this.model.protectionPersonsProperty.securityTransports = []
            this.model.protectionPersonsProperty.securityTransports.push(new SecurityTransport());
        }
        else if (this.model.pointOfPrivateSecurityServicesLaw == PointOfPrivateSecurityServicesLaw.RealEstatSecurity) {
            this.model.securityOfSitesRealEstate = new SecurityOfSitesRealEstate();
            this.model.securityOfSitesRealEstate.securityTransports = []
            this.model.securityOfSitesRealEstate.securityTransports.push(new SecurityTransport());
        }
        else if (this.model.pointOfPrivateSecurityServicesLaw == PointOfPrivateSecurityServicesLaw.EventsSecurityServices) {
            this.model.securityOfEvents = new SecurityOfEvents();
            this.model.securityOfEvents.securityTransports = []
            this.model.securityOfEvents.securityTransports.push(new SecurityTransport());
        }
        else
            if (this.model.pointOfPrivateSecurityServicesLaw == PointOfPrivateSecurityServicesLaw.ValuablesAndCargoesSecurityServices) {
                this.model.securityTransportingCargo = new SecurityTransportingCargo();
                this.model.securityTransportingCargo.securityTransports = []
                this.model.securityTransportingCargo.securityTransports.push(new SecurityTransport());
            }
            else
                if (this.model.pointOfPrivateSecurityServicesLaw == PointOfPrivateSecurityServicesLaw.PersonalSecurityServicesForPersons) {
                    this.model.personalSecurity = new PersonalSecurity();
                    this.model.personalSecurity.securityTransports = []
                    this.model.personalSecurity.securityTransports.push(new SecurityTransport());
                }
    }
}

export const SecurityObjectDataUI = withDocumentFormManager(withCollectionItems(SecurityObjectDataImpl, {
    initItem: () => new SecurityObject(),
    addButtonLabelKey: 'GL_ADD_SECURITY_OBJECT_L'
}));