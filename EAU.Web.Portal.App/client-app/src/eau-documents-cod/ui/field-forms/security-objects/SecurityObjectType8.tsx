import { SelectListItem } from "cnsys-core";
import { BaseProps } from "cnsys-ui-react";
import { attributesClassFormControlRequiredLabel, Constants, EAUBaseComponent, ResourceHelpers, attributesClassFormControlLabel } from "eau-core";
import { observer } from "mobx-react";
import React from "react";
import { SecurityObjectTransportUI } from "..";
import { SecurityType, SecurityTransportingCargo } from "../../../models/ModelsAutoGenerated";
import { withDocumentFormManager, ApplicationFormManagerProps } from "eau-documents";
import { isNotificationForTakingOrRemovingFromSecurityManager } from "../../../form-managers/NotificationForTakingOrRemovingFromSecurityManager";

interface SecurityObjectType8Props extends BaseProps, ApplicationFormManagerProps {
    isForTermination: boolean
}

@observer export class SecurityObjectType8Impl extends EAUBaseComponent<SecurityObjectType8Props, SecurityTransportingCargo>{

    constructor(props: SecurityObjectType8Props) {
        super(props);

        if (isNotificationForTakingOrRemovingFromSecurityManager(this.props.documentFormManager)) {

            if (this.props.isForTermination && !this.model.terminationDate) {
                this.model.terminationDate = this.props.documentFormManager.getActualDate();
            }
            if (!this.props.isForTermination && !this.model.actualDate) {
                this.model.actualDate = this.props.documentFormManager.getActualDate();
            }
        }
    }

    renderEdit(): JSX.Element {
        return this.props.isForTermination ? this.renderTerminationEditUI() : this.renderEditUI()
    }

    renderDisplay(): JSX.Element {
        return this.props.isForTermination ? this.renderTerminationDisplayUI() : this.renderDisplayUI()

    }

    renderEditUI() {
        return (
            <>
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(m => m.actualDate, null, attributesClassFormControlRequiredLabel)}
                        <div className="input-group date-control">
                            {this.dateFor(m => m.actualDate)}
                        </div>
                        <div className="sr-only" id="HELP_P-4">Попълнете две цифри за дата, две цифри за месец и четири цифри за година. Разделете цифрите за дата, месец и година с точка.</div>
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(m => m.objectTypes, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.objectTypes)}
                    </div>
                    <div className="form-group col-lg-6">
                        {this.labelFor(m => m.territorialScopeFrom, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.territorialScopeFrom)}
                    </div>
                    <div className="form-group col-lg-6">
                        {this.labelFor(m => m.territorialScopeTo, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.territorialScopeTo)}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-sm-6">
                        {this.labelFor(m => m.securityType, null, attributesClassFormControlRequiredLabel)}
                        {this.dropDownListFor(m => m.securityType, [
                            new SelectListItem(
                                {
                                    value: SecurityType.Armed.toString(),
                                    text: ResourceHelpers.getResourceByEmun(SecurityType.Armed, SecurityType)
                                }
                            )])}
                    </div>
                </div>                
                <div className="list-fileds-group" id="TRANSPORT">
                    <SecurityObjectTransportUI {...this.bind(m => m.securityTransports)} isRequired={true} />
                </div>
            </>
        )
    }

    renderTerminationEditUI() {
        return (
            <>
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(m => m.terminationDate, null, attributesClassFormControlRequiredLabel)}
                        <div className="input-group date-control">
                            <div className="input-group date-control">
                                {this.dateFor(m => m.terminationDate)}
                            </div>
                            <div className="sr-only" id="HELP_P-2">Попълнете две цифри за дата, две цифри за месец и четири цифри за година. Разделете цифрите за дата, месец и година с точка.</div>
                        </div>
                    </div>
                </div>  
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(m => m.objectTypes, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.objectTypes)}
                    </div>
                    <div className="form-group col-lg-6">
                        {this.labelFor(m => m.territorialScopeFrom, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.territorialScopeFrom)}
                    </div>
                    <div className="form-group col-lg-6">
                        {this.labelFor(m => m.territorialScopeTo, null, attributesClassFormControlRequiredLabel)}
                        {this.textBoxFor(m => m.territorialScopeTo)}
                    </div>
                </div>
            </>
        )
    }

    renderDisplayUI() {
        return (
            <>
                <div className="row">
                    <div className="form-group col-12">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.actualDate)}</h4>
                        {this.dateDisplayFor(this.model.actualDate, Constants.DATE_FORMATS.date)}
                        {this.propertyErrorsDispleyFor(m => m.actualDate)}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-12">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.objectTypes)}</h4>
                        {this.textDisplayFor(m => m.objectTypes)}
                    </div>
                    <div className="form-group col-sm-6">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.territorialScopeFrom)}</h4>
                        {this.textDisplayFor(m => m.territorialScopeFrom)}
                    </div>
                    <div className="form-group col-sm-6">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.territorialScopeTo)}</h4>
                        {this.textDisplayFor(m => m.territorialScopeTo)}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-sm-6 col-xl-4">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.securityType)}</h4>
                        {ResourceHelpers.getResourceByEmun(this.model.securityType, SecurityType)}
                        {this.propertyErrorsDispleyFor(m => m.securityType)}
                    </div>
                </div>
                <div className="list-fileds-group" id="TRANSPORT">
                    <SecurityObjectTransportUI {...this.bind(m => m.securityTransports)} />
                </div>
            </>
        )
    }

    renderTerminationDisplayUI() {
        return (
            <>
                <div className="row">
                    <div className="form-group col-12">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.terminationDate)}</h4>
                        {this.dateDisplayFor(this.model.terminationDate, Constants.DATE_FORMATS.date)}
                        {this.propertyErrorsDispleyFor(m => m.terminationDate)}
                    </div>
                </div>
                <div className="row">
                    <div className="form-group col-12">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.objectTypes)}</h4>
                        {this.textDisplayFor(m => m.objectTypes)}
                    </div>
                    <div className="form-group col-sm-6">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.territorialScopeFrom)}</h4>
                        {this.textDisplayFor(m => m.territorialScopeFrom)}
                    </div>
                    <div className="form-group col-sm-6">
                        <h4 className="form-control-label">{this.getResourceByProperty(m => m.territorialScopeTo)}</h4>
                        {this.textDisplayFor(m => m.territorialScopeTo)}
                    </div>
                </div>
            </>
        )
    }   
}

export const SecurityObjectType8 = withDocumentFormManager(SecurityObjectType8Impl);