import { AsyncUIProps, BaseProps } from 'cnsys-ui-react';
import { EAUBaseComponent, Constants, RegistrationDataTypes } from 'eau-core';
import { observer } from 'mobx-react';
import * as React from 'react';
import { ObjectHelper } from 'cnsys-core';
import { Obligation, ObligationStatuses, PaymentRequestStatuses } from '../../models/ModelsAutoGenerated';


interface KatObligationsResultProps extends BaseProps, AsyncUIProps {
    callbackPayAction: (obligation: Obligation, registrationDataType: number, withDiscount: boolean, isPaymentSent?: boolean) => any;
}

@observer class KatObligationsResultUIImpl extends EAUBaseComponent<KatObligationsResultProps, Obligation>{

    constructor(props: KatObligationsResultProps) {
        super(props);

        this.renderPayButtons = this.renderPayButtons.bind(this);
    }

    render() {

        let isServed = this.model.additionalData.hasOwnProperty('isServed') && this.model.additionalData.isServed.toLowerCase() == "true" ? true : false;
        let rowDescription = <></>;
        let isMainDocument = this.model.additionalData.hasOwnProperty('isMainDocument') && this.model.additionalData.isMainDocument.toLowerCase() == 'true' ? true : false;

        const obligationStatuses = ObligationStatuses;

        var lastPaymentEPayRequest = null;

        let isPaymentSent = false;

        if (ObjectHelper.isArray(this.model.paymentRequests)) {
            this.model.paymentRequests.forEach((request) => {

                if (request.registrationDataType != RegistrationDataTypes.ePay)
                    return;

                isPaymentSent = request.status == PaymentRequestStatuses.Sent ? true : false;

                if (!lastPaymentEPayRequest)
                    lastPaymentEPayRequest = request;

                if (lastPaymentEPayRequest.sendDate < request.sendDate)
                    lastPaymentEPayRequest = request;
            })
        }

        // Пояснителни текстове към редовете с плащания с ePay
        switch (this.model.status) {

            case obligationStatuses.Paid:
            case obligationStatuses.Processed:

                rowDescription = <tr className={`row-description ${isMainDocument ? "table-info" : ''}`}>
                    <td colSpan={8}>
                        <span className="text-info">
                            <em
                                dangerouslySetInnerHTML={{
                                    __html: this.getResource("GL_ANDOBLIGATION_PAYMENT_STATUS_PAID_I")
                                        .replace('{TYPE}', this.getResource(`GL_${this.model.additionalData.documentType}_L`))
                                        .replace('{NUMBER}', this.model.additionalData.documentNumber)
                                        .replace('{AMOUNT}', lastPaymentEPayRequest.amount)
                                        .replace('{SENDDATE}', lastPaymentEPayRequest.sendDate.format(Constants.DATE_FORMATS.dateTime))
                                        .replace('{PAYMENT_PORTAL}', lastPaymentEPayRequest.registrationDataType == RegistrationDataTypes.ePay ? this.getResource("GL_PAYMENT_METHOD_EPAY_L") : this.getResource("GL_PAYMENT_METHOD_PEPDAEU_L")
                                        )
                                }}>
                            </em>
                        </span>
                    </td>
                </tr>
                break;
        }

        return (
            <>
                <tr key={this.model.obligationID} className={isMainDocument ? "table-info" : ''}>
                    <td>
                        <p className="th-title d-sm-none">
                            {this.getResource("GL_DOCUMENT_TYPE_L")}
                        </p>
                        <p className="td-text">
                            {this.getResource(`GL_${this.model.additionalData.documentType}_L`)}
                            {isMainDocument ? <i className="ui-icon ui-icon-state-info ml-1" title={this.getResource("GL_KAT_OBLIGATION_MAIN_DOCUMENT_I")}></i> : ''}
                        </p>
                    </td>
                    <td>
                        <p className="th-title d-sm-none">{this.getResource("GL_DOCUMENT_SERIES_L")}</p>
                        <p className="td-text">{this.model.additionalData.documentSeries}</p>
                    </td>
                    <td>
                        <p className="th-title d-sm-none">{this.getResource("GL_DOCUMENT_NUMBER_L")}</p>
                        <p className="td-text">{this.model.additionalData.documentNumber}</p>
                    </td>
                    <td>
                        <p className="th-title d-sm-none">{this.getResource("GL_DATE_OF_ISSUE_L")}</p>
                        <p className="td-text">{this.model.additionalData.fishCreateDate}</p>
                    </td>
                    <td className="text-right">
                        <p className="th-title d-sm-none">{this.getResource("GL_AMOUNT_DUE_L")}</p>
                        <p className="td-text">{this.model.amount} {this.getResource("GL_BGN_ABBRAVETION_L")}</p>
                    </td>
                    <td className="text-right">
                        <p className="th-title d-sm-none">{this.getResource("GL_DISCOUNT_L")}</p>
                        <p className="td-text">{this.model.additionalData.discount} %</p>
                    </td>
                    <td className="text-right">
                        <p className="th-title d-sm-none">{this.getResource("GL_PAYMENT_AMOUNT_L")}</p>
                        <p className="td-text">{this.model.discountAmount} {this.getResource("GL_BGN_ABBRAVETION_L")}</p>
                    </td>
                    <td className="actions-td">

                        <p className="th-title d-sm-none">{this.getResource("GL_ACTIONS_L")}</p>

                        {this.renderPayButtons(isServed, isPaymentSent)}
                    </td>
                </tr>
                {rowDescription}
            </>
        );
    }

    renderPayButtons(isServed: boolean, isPaymentSent: boolean) {
        const obligationStatuses = ObligationStatuses;
        const registrationDataTypes = RegistrationDataTypes;

        if (this.model.status != obligationStatuses.Paid && this.model.status != obligationStatuses.Processed) {

            if (!isServed && this.model.amount != this.model.discountAmount) {
                return (
                    <>
                        {this.model.pepCin &&
                            <>
                                <p><button className="btn btn-link" onClick={() => this.props.callbackPayAction(this.model, registrationDataTypes.PepOfDaeu, true, isPaymentSent)}>{this.getResource("GL_PAY_BY_CARD_DISCOUNT_L")}</button></p>
                                <p><button className="btn btn-link" onClick={() => this.props.callbackPayAction(this.model, registrationDataTypes.PepOfDaeu, false, isPaymentSent)}>{this.getResource("GL_PAY_BY_CARD_L")}</button></p>
                            </>}

                        <p><button className="btn btn-link" onClick={() => this.props.callbackPayAction(this.model, registrationDataTypes.ePay, true, isPaymentSent)}>{this.getResource("GL_PAY_BY_EPAY_DISCOUNT_L")}</button></p>

                        <p><button className="btn btn-link" onClick={() => this.props.callbackPayAction(this.model, registrationDataTypes.ePay, false, isPaymentSent)}>{this.getResource("GL_PAY_BY_EPAY_L")}</button></p>

                    </>
                )
            }
            else {
                return (
                    <>
                        {this.model.pepCin ?
                            <p><button className="btn btn-link" onClick={() => this.props.callbackPayAction(this.model, registrationDataTypes.PepOfDaeu, true, isPaymentSent)}>{this.getResource("GL_PAY_BY_CARD_L")}</button></p> : ""}

                        <p><button className="btn btn-link" onClick={() => this.props.callbackPayAction(this.model, registrationDataTypes.ePay, true, isPaymentSent)}>{this.getResource("GL_PAY_BY_EPAY_L")}</button></p>
                    </>
                )
            }

        }
        else {
            return (
                <>
                </>
            )
        }
    }
}

export const KatObligationsResultUI = KatObligationsResultUIImpl