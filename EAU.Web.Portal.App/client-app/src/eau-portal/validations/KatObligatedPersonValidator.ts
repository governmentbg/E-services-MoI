import { EAUBaseValidator, resourceManager } from "eau-core";
import { Obligation, ObligedPersonIdentTypes } from "../models/ModelsAutoGenerated";


export class KatObligatedPersonValidator extends EAUBaseValidator<Obligation, any> {

    constructor() {
        super();

        this.ruleFor(m => m.obligedPersonName).notEmpty().withMessage(resourceManager.getResourceByKey("GL_INPUT_FIELD_MUST_E"));
        this.ruleFor(m => m.obligedPersonName).length(null, 26).withMessage(this.getMessage('GL_OBLIGATED_PERSON_NAME_MAX_LENGTH_E'));
        this.ruleFor(m => m.obligedPersonName).matches('^[a-zа-я0-9\\s-,.]+$', 'i').withMessage(this.getMessage('GL_ENTER_VALID_OBLIGATED_PERSON_NAME_E'));
        this.ruleFor(m => m.obligedPersonIdent).notEmpty().withMessage(resourceManager.getResourceByKey("GL_INPUT_FIELD_MUST_E"));
        this.ruleFor(m => m.obligedPersonIdent).isValidEGN().withMessage(resourceManager.getResourceByKey("GL_INVALID_EGN_E")).when(m => m.obligedPersonIdentType == ObligedPersonIdentTypes.EGN);
        this.ruleFor(m => m.obligedPersonIdent).isValidEGN().withMessage(resourceManager.getResourceByKey("GL_INVALID_LNCH_E")).when(m => m.obligedPersonIdentType == ObligedPersonIdentTypes.LNC);
        this.ruleFor(m => m.obligedPersonIdent).isValidBULSTAT().withMessage(resourceManager.getResourceByKey("DOC_GL_InvalidBULSTATAndEIK_E")).when(m => m.obligedPersonIdentType == ObligedPersonIdentTypes.BULSTAT);
    }

    public validate(obj: Obligation): boolean {

        let isValid = super.validate(obj);

        return isValid;
    }
}


