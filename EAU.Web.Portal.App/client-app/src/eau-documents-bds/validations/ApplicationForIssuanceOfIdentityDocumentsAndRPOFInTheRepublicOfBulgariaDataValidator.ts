import { EAUBaseValidator, ResourceHelpers } from "eau-core";
import { DocumentFormValidationContext, ErrMsgCodesConstants } from "eau-documents";
import { ApplicationForIssuanceOfIdentityDocumentsAndRPOFInTheRepublicOfBulgariaDataVM } from "../models/ModelsAutoGenerated";
import { ForeignIdentityBasicDataValidator } from "./ForeignIdentityBasicDataValidator";
import { TravelDocumentValidator } from "./TravelDocumentValidator";

export class ApplicationForIssuanceOfIdentityDocumentsAndRPOFInTheRepublicOfBulgariaDataValidator
    extends EAUBaseValidator<ApplicationForIssuanceOfIdentityDocumentsAndRPOFInTheRepublicOfBulgariaDataVM, DocumentFormValidationContext> {

    constructor() {
        super();

        this.ruleFor(m => m.foreignIdentityBasicData).setValidator(new ForeignIdentityBasicDataValidator());
        this.ruleFor(m => m.abroadAddress).match(/^[а-яА-Яa-zA-Z\s+\d+~@#$%^&*()_{}|"':>=|!<.,/\\?;-]+$/g).withMessage(ResourceHelpers.formatErrorMessage(ErrMsgCodesConstants.FieldValidationCyrillicLatinNumbersSymbols,
            new ApplicationForIssuanceOfIdentityDocumentsAndRPOFInTheRepublicOfBulgariaDataVM(), 'abroadAddress'));
        this.ruleFor(m => m.travelDocument).setValidator(new TravelDocumentValidator());
    }
}