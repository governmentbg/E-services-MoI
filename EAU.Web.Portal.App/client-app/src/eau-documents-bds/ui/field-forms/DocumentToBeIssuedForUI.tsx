import { BaseProps, ViewMode } from "cnsys-ui-react";
import { EAUBaseComponent } from "eau-core";
import { DocumentMustServeToUI, FieldFormUI } from "eau-documents";
import React from "react";
import { DocumentToBeIssuedForVM, IssueDocumentFor } from "../../models/ModelsAutoGenerated";
import { IssuedBulgarianIdentityDocumentsInPeriodUI } from "./IssuedBulgarianIdentityDocumentsInPeriodUI";
import { OtherIndormationConnectedWithIssuedBulgarianIdentityDocumentsUI } from "./OtherIndormationConnectedWithIssuedBulgarianIdentityDocumentsUI";

export class DocumentToBeIssuedForUI extends EAUBaseComponent<BaseProps, DocumentToBeIssuedForVM> {

    renderEdit(): JSX.Element {
        return <>
            {this.renderAddressForIssuing()}
            <FieldFormUI title={this.getResourceByProperty(m => m.documentMustServeTo)} required>
                <DocumentMustServeToUI {...this.bind(m => m.documentMustServeTo)} />
            </FieldFormUI>
        </>
    }

    renderDisplay(): JSX.Element {
        return <>
            {this.renderAddressForIssuing()}
            <FieldFormUI title={this.getResourceByProperty(m => m.documentMustServeTo)}>
                <DocumentMustServeToUI {...this.bind(m => m.documentMustServeTo)} />
                {this.propertyErrorsDispleyFor(m => m.documentMustServeTo)}
            </FieldFormUI>
        </>
    }

    renderAddressForIssuing() {
        if (this.model.chooseIssuingDocument == IssueDocumentFor.IssuedBulgarianIdentityDocumentsInPeriod) {
            return <FieldFormUI title={this.getResourceByProperty(m => m.issuedBulgarianIdentityDocumentsInPeriod)} required={this.props.viewMode == ViewMode.Edit}>
                <IssuedBulgarianIdentityDocumentsInPeriodUI {...this.bind(m => m.issuedBulgarianIdentityDocumentsInPeriod)} />
            </FieldFormUI>
        } else if (this.model.chooseIssuingDocument == IssueDocumentFor.OtherIndormationConnectedWithIssuedBulgarianIdentityDocuments) {
            return <FieldFormUI title={this.getResourceByProperty(m => m.otherIndormationConnectedWithIssuedBulgarianIdentityDocuments)} required={this.props.viewMode == ViewMode.Edit}>
                <OtherIndormationConnectedWithIssuedBulgarianIdentityDocumentsUI {...this.bind(m => m.otherIndormationConnectedWithIssuedBulgarianIdentityDocuments)} />
                {this.props.viewMode == ViewMode.Display ? this.propertyErrorsDispleyFor(m => m.otherIndormationConnectedWithIssuedBulgarianIdentityDocuments) : null}
            </FieldFormUI>
        }
    }
} 