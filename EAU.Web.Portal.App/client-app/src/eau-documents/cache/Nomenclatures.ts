import { UnitInfo } from "../models/ModelsAutoGenerated";
import { DeliveryUnitsInfoCache } from "./DeliveryUnitsInfoCache";
import { ServingUnitsInfoCache } from "./ServingUnitsInfoCache";
import { TerminationOfRegistrationOfVehicleCache } from "./TerminationOfRegistrationOfVehicleCache";
import { ReasonForIssuingDuplicateOfSRMPSCache } from "./ReasonForIssuingDuplicateOfSRMPSCache";
import { ImportCountriesCache } from "./ImportCountriesCache";
import { ProvinceCodesCache } from "./ProvinceCodesCache";
import { VehicleBaseColorCache } from "./VehicleBaseColorCache";
import { AISKATNomenclatureItem } from "../models/AISKATNomenclatureItem";
import { AISKATHieraNomenclature } from "../models/AISKATHieraNomenclature";

let deliveryUnitsInfoCache: DeliveryUnitsInfoCache = new DeliveryUnitsInfoCache();
let servingUnitsInfoCache: ServingUnitsInfoCache = new ServingUnitsInfoCache();
let katTerminationResonsCache: TerminationOfRegistrationOfVehicleCache = new TerminationOfRegistrationOfVehicleCache();
let katResonsForIssuingDuplicateOfSRMP: ReasonForIssuingDuplicateOfSRMPSCache = new ReasonForIssuingDuplicateOfSRMPSCache();
let katImportCountries: ImportCountriesCache = new ImportCountriesCache();
let katProvinceCodesCache: ProvinceCodesCache = new ProvinceCodesCache();
let katVehicleBaseColors: VehicleBaseColorCache = new VehicleBaseColorCache();

export namespace Nomenclatures {

    export function getDeliveryUnitsInfo(serviceID: number, predicate?: (elem: UnitInfo) => boolean): Promise<UnitInfo[]> {
        return deliveryUnitsInfoCache.getItem(serviceID.toString());
    }

    export function getServingUnitsInfo(serviceID: number, predicate?: (elem: UnitInfo) => boolean): Promise<UnitInfo[]> {
        return servingUnitsInfoCache.getItem(serviceID.toString());
    }

    export function getTerminationOfRegistrationOfVehicle(): Promise<AISKATNomenclatureItem[]> {
        return katTerminationResonsCache.getItem();
    }

    export function getReasonForIssuingDuplicateOfSRMPS(): Promise<AISKATNomenclatureItem[]> {
        return katResonsForIssuingDuplicateOfSRMP.getItem();
    }

    export function getCountries(): Promise<AISKATNomenclatureItem[]> {
        return katImportCountries.getItem();
    }

    export function getProvinceCodes(policeDepartmentID: number, vehicleTypeCode: number): Promise<string[]> {
        return katProvinceCodesCache.getItem(`${policeDepartmentID}_${vehicleTypeCode}`);
    }

    export function getVehicleBaseColors(): Promise<AISKATNomenclatureItem[]> {
        return katVehicleBaseColors.getItem();
    }
}
